set nocompatible
" Required by Vundle
filetype off

set rtp+=~/.vim/bundle/vundle
call vundle#rc()

Plugin 'gmarik/vundle'

if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

" Filetype detection enabled back again
filetype plugin indent on

" Set Omni completion
set omnifunc=syntaxcomplete#Complete

" Enable syntax highlighting
syntax on

"------------------------------------------------------------
" Must have options {{{1
"
" Vim with default settings does not allow easy switching between multiple files
" in the same editor window. Users can use multiple split windows or multiple
" tab pages to edit multiple files, but it is still best to enable an option to
" allow easier switching between files.
"
" One such option is the 'hidden' option, which allows you to re-use the same
" window and switch from an unsaved buffer without saving it first. Also allows
" you to keep an undo history for multiple files when re-using the same window
" in this way. Note that using persistent undo also lets you undo in multiple
" files even in the same window, but is less efficient and is actually designed
" for keeping undo history after closing Vim entirely. Vim will complain if you
" try to quit without saving, and swap files will keep you safe if your computer
" crashes.
set hidden

" Note that not everyone likes working this way (with the hidden option).
" Alternatives include using tabs or split windows instead of re-using the same
" window as mentioned above, and/or either of the following options:
" set confirm
" set autowriteall

" Better command-line completion
set wildmenu

" Show partial commands in the last line of the screen
set showcmd

" Highlight searches (use <C-L> to temporarily turn off highlighting; see the
" mapping of <C-L> below)
set hlsearch

"------------------------------------------------------------
" Usability options {{{1
"
" These are options that users frequently set in their .vimrc. Some of them
" change Vim's behaviour in ways which deviate from the true Vi way, but
" which are considered to add usability. Which, if any, of these options to
" use is very much a personal preference, but they are harmless.

" Use case insensitive search, except when using capital letters
set ignorecase
set smartcase

" Allow backspacing over autoindent, line breaks and start of insert action
set backspace=indent,eol,start

" When opening a new line and no filetype-specific indenting is enabled, keep
" the same indent as the line you're currently on. Useful for READMEs, etc.
set autoindent

" Stop certain movements from always going to the first character of a line.
" While this behaviour deviates from that of Vi, it does what most users
" coming from other editors would expect.
set nostartofline

" Display the cursor position on the last line of the screen or in the status
" line of a window
set ruler

" Always display the status line, even if only one window is displayed
set laststatus=2

" Instead of failing a command because of unsaved changes, instead raise a
" dialogue asking if you wish to save changed files.
set confirm

" Use visual bell instead of beeping when doing something wrong
set visualbell

" And reset the terminal code for the visual bell. If visualbell is set, and
" this line is also included, vim will neither flash nor beep. If visualbell
" is unset, this does nothing.
set t_vb=

" Enable use of the mouse for all modes
set mouse=a

" Display line numbers on the left
set number

" Quickly time out on keycodes, but never time out on mappings
set notimeout ttimeout ttimeoutlen=200

" Use <F2> to toggle between 'paste' and 'nopaste'
set pastetoggle=<F2>



"------------------------------------------------------------
" Indentation options {{{1
"
" Indentation settings for using 2 spaces instead of tabs.
" Do not change 'tabstop' from its default value of 8 with this setup.
set shiftwidth=2
set softtabstop=2
set expandtab

"------------------------------------------------------------
" Mappings {{{1
"

" Map jj to work as <Esc> in insert mode.
" inoremap jj <Esc>

" Map ',' to be the leader key
let mapleader = ','

nmap <Leader>m :NERDTreeToggle<CR>
nmap <Leader>j :NERDTreeFind<CR><CR>

" Map Y to act like D and C, i.e. to yank until EOL, rather than act as yy,
" which is the default
map Y y$

" Use soft-wrap j and k movements
nnoremap j gj
nnoremap k gk

" Use a semicolon (;) as colon (:) to reduce a number of keystrokes
"nnoremap ; :

" Map <C-L> (redraw screen) to also turn off search highlighting until the
" next search
nnoremap <C-L> :nohl<CR><C-L>

" Use backslash as a qualifier for using vim-easymotion
let g:EasyMotion_leader_key = '<Leader><Leader>'

" CtrlP fuzzy finder settings
"------------------------------------------------------------
"
let g:ctrlp_map = '<Leader>t'
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']

"------------------------------------------------------------

"------------------------------------------------------------
" Backup/swap file {{{1
"
" Set no backupping and swap file
set nobackup
set noswapfile
"------------------------------------------------------------

"------------------------------------------------------------
" Sparkup (Zen Coding) settings {{{1
"
let g:sparkupExecuteMapping = '<c-e>'
"------------------------------------------------------------

" Configure delimitMate
let delimitMate_expand_cr = 2

"------------------------------------------------------------
" Ignore typical folders when using Ctrl-P
"
set wildignore+=*/tmp/**/*
set wildignore+=*/vendor/**/*       " Ignore frontend apps' dependencies
set wildignore+=*/node_modules/**/* " Ignore node install files
set wildignore+=*/target/**/*       " Ignore SBT products
set wildignore+=*/results/**/*      " Ignore Gatling results
"------------------------------------------------------------

nmap <buffer> <F4> <Plug>(xmpfilter-run)
xmap <buffer> <F4> <Plug>(xmpfilter-run)
imap <buffer> <F4> <Plug>(xmpfilter-run)
nmap <buffer> <F3> <Plug>(xmpfilter-mark)
xmap <buffer> <F3> <Plug>(xmpfilter-mark)
imap <buffer> <F3> <Plug>(xmpfilter-mark)

"------------------------------------------------------------
" Language specific settings
"------------------------------------------------------------

" Clojure
autocmd BufEnter *.cljs,*.clj,*.cljs.hl RainbowParenthesesActivate
autocmd BufEnter *.cljs,*.clj,*.cljs.hl RainbowParenthesesLoadRound
autocmd BufEnter *.cljs,*.clj,*.cljs.hl RainbowParenthesesLoadSquare
autocmd BufEnter *.cljs,*.clj,*.cljs.hl RainbowParenthesesLoadBraces

" Set proper executable for taglist.vim
let Tlist_Ctags_Cmd = "/opt/boxen/homebrew/bin/ctags"

"------------------------------------------------------------
" Look-a-likes {{{1
colorscheme solarized

" Set Solarized Light when ambient light is strong, dark otherwise.
let hour = strftime("%H")
if 6 <= hour && hour < 19
  set background=light
else
  set background=dark
endif

